# coding: utf-8

"""
    Zarban Wallet API

    API for Zarban wallet services.  # noqa: E501

    The version of the OpenAPI document: 2.0.0
    Contact: info@zarban.io
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import zarban.wallet.openapi_client
from zarban.wallet.openapi_client.models.balance import Balance  # noqa: E501
from zarban.wallet.openapi_client.rest import ApiException

class TestBalance(unittest.TestCase):
    """Balance unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test Balance
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = zarban.wallet.openapi_client.models.balance.Balance()  # noqa: E501
        if include_optional :
            return Balance(
                locked = {"values":{"USD":"1.23","TMN":"45.67","ZAR":"89.01","ETH":"0.02"}}, 
                coin = zarban.wallet.openapi_client.models.coin.Coin(
                    config = zarban.wallet.openapi_client.models.coin_config.CoinConfig(
                        is_tradeable = True, 
                        withdraw_fees = {"tron":"10"}, 
                        min_withdrawal = {"tron":"10"}, 
                        needs_memo = True, ), 
                    symbol = 'USD', 
                    name = {"en_US":"Zar Stablecoin","fa_IR":"استیبل کوین زر"}, 
                    logo_uri = '0', 
                    depositable_networks = [
                        zarban.wallet.openapi_client.models.network.Network(
                            name = {"en_US":"Zar Stablecoin","fa_IR":"استیبل کوین زر"}, 
                            logo_uri = '0', )
                        ], 
                    withdrawable_networks = [
                        zarban.wallet.openapi_client.models.network.Network(
                            name = {"en_US":"Zar Stablecoin","fa_IR":"استیبل کوین زر"}, 
                            logo_uri = '0', )
                        ], 
                    content = zarban.wallet.openapi_client.models.bullet_content.BulletContent(
                        title = '0', 
                        text = '0', 
                        bullets = [
                            '0'
                            ], ), ), 
                balance = {"values":{"USD":"1.23","TMN":"45.67","ZAR":"89.01","ETH":"0.02"}}
            )
        else :
            return Balance(
                locked = {"values":{"USD":"1.23","TMN":"45.67","ZAR":"89.01","ETH":"0.02"}},
                coin = zarban.wallet.openapi_client.models.coin.Coin(
                    config = zarban.wallet.openapi_client.models.coin_config.CoinConfig(
                        is_tradeable = True, 
                        withdraw_fees = {"tron":"10"}, 
                        min_withdrawal = {"tron":"10"}, 
                        needs_memo = True, ), 
                    symbol = 'USD', 
                    name = {"en_US":"Zar Stablecoin","fa_IR":"استیبل کوین زر"}, 
                    logo_uri = '0', 
                    depositable_networks = [
                        zarban.wallet.openapi_client.models.network.Network(
                            name = {"en_US":"Zar Stablecoin","fa_IR":"استیبل کوین زر"}, 
                            logo_uri = '0', )
                        ], 
                    withdrawable_networks = [
                        zarban.wallet.openapi_client.models.network.Network(
                            name = {"en_US":"Zar Stablecoin","fa_IR":"استیبل کوین زر"}, 
                            logo_uri = '0', )
                        ], 
                    content = zarban.wallet.openapi_client.models.bullet_content.BulletContent(
                        title = '0', 
                        text = '0', 
                        bullets = [
                            '0'
                            ], ), ),
                balance = {"values":{"USD":"1.23","TMN":"45.67","ZAR":"89.01","ETH":"0.02"}},
        )

    def testBalance(self):
        """Test Balance"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
